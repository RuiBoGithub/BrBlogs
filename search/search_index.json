{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hi! This is Rui!","title":"Home"},{"location":"about/","text":"Git Setup Commands # Initialize a new Git repository git init # Stage all files git add . # Commit the changes git commit -m \"Initial commit\" # Add remote repository (if not already added) git remote add origin https://github.com/YOUR_GITHUB_USERNAME/YOUR_REPO_NAME.git # If remote already exists, remove and re-add it * git remote remove origin # Verify remote * git remote -v # Push to GitHub * git branch -M main git push -u origin main","title":"About"},{"location":"about/#git-setup-commands","text":"# Initialize a new Git repository git init # Stage all files git add . # Commit the changes git commit -m \"Initial commit\" # Add remote repository (if not already added) git remote add origin https://github.com/YOUR_GITHUB_USERNAME/YOUR_REPO_NAME.git # If remote already exists, remove and re-add it * git remote remove origin # Verify remote * git remote -v # Push to GitHub * git branch -M main git push -u origin main","title":"Git Setup Commands"},{"location":"blog/post1/","text":"Read a Full List List columns import pandas as pd df = pd.read_csv('Q.csv') print(df.columns.tolist()) import pandas as pd import matplotlib.pyplot as plt df = pd.read_csv('Q.csv') plt.plot(df[], df[]) plt.xticks(rotation=45) plt.tight_layout() plt.show()","title":"Post1:{if there is}"},{"location":"blog/post1/#read-a-full-list","text":"","title":"Read a Full List"},{"location":"blog/post1/#list-columns","text":"import pandas as pd df = pd.read_csv('Q.csv') print(df.columns.tolist()) import pandas as pd import matplotlib.pyplot as plt df = pd.read_csv('Q.csv') plt.plot(df[], df[]) plt.xticks(rotation=45) plt.tight_layout() plt.show()","title":"List columns"},{"location":"blog/post2/","text":"plot_data.py import pandas as pd import matplotlib.pyplot as plt def main(): try: df = pd.read_csv('evaluation_data.csv') # Get parameters from user time_col = input(\"Enter timestamp column name: \").strip() y_cols = input(\"Enter 1-2 y-axis columns (comma-separated): \").split(',') y_cols = [col.strip() for col in y_cols] # Convert timestamp df[time_col] = pd.to_datetime(df[time_col]) # Create plot plt.figure(figsize=(12, 6)) ax = df.plot(x=time_col, y=y_cols[0]) # Add second axis if needed if len(y_cols) == 2: ax2 = ax.twinx() df.plot(x=time_col, y=y_cols[1], ax=ax2, color='orange') ax2.set_ylabel(y_cols[1]) ax.set_xlabel(time_col) ax.set_ylabel(y_cols[0]) plt.title(\"Time Series Visualization\") plt.tight_layout() plt.show() except Exception as e: print(f\"Error: {str(e)}\") if name == \" main \": main()","title":"Post2:{comments}"},{"location":"blog/post2/#plot_datapy","text":"import pandas as pd import matplotlib.pyplot as plt def main(): try: df = pd.read_csv('evaluation_data.csv') # Get parameters from user time_col = input(\"Enter timestamp column name: \").strip() y_cols = input(\"Enter 1-2 y-axis columns (comma-separated): \").split(',') y_cols = [col.strip() for col in y_cols] # Convert timestamp df[time_col] = pd.to_datetime(df[time_col]) # Create plot plt.figure(figsize=(12, 6)) ax = df.plot(x=time_col, y=y_cols[0]) # Add second axis if needed if len(y_cols) == 2: ax2 = ax.twinx() df.plot(x=time_col, y=y_cols[1], ax=ax2, color='orange') ax2.set_ylabel(y_cols[1]) ax.set_xlabel(time_col) ax.set_ylabel(y_cols[0]) plt.title(\"Time Series Visualization\") plt.tight_layout() plt.show() except Exception as e: print(f\"Error: {str(e)}\") if name == \" main \": main()","title":"plot_data.py"},{"location":"blog/post3/","text":"","title":"Post3"},{"location":"blog/post4/","text":"","title":"Post4"},{"location":"misc/Unipy/","text":"python /Users/rui.bo/Documents/Unipy/ls.py /absolute/path/to/your/evaluation_data.csv python /Users/rui.bo/Documents/Unipy/plot.py \\ --p data.csv \\ --xxx \"'Time Column'\" \\ --yyy \"'Occupancy Gain','Heat Pump Power'\"","title":"Unipy"},{"location":"misc/mkdocs/","text":"MkDocs Project Setup Guide 1. Create New MkDocs Environment mkdocs new . 2. Configure mkdocs.yml site_name: Rui Bo Blog site_url: https://mydomain.org/mysite theme: name: readthedocs highlightjs: true hljs_languages: - yaml - rus 3. Build and Serve Documentation mkdocs serve 4. Transfer to Github git init git status # (1) Stage and (2) Confirm git add . git add -A git add docs/index.md README.md git commit -m \"Initial commit\" # (3) Reference git remote add origin https://github.com/your-username/PhD-Thoughts.git git remote remove origin # (4) Give and (5) Take git push -u origin main git pull origin main 5. Online mkdocs gh-deploy","title":"mkdocs"},{"location":"misc/mkdocs/#mkdocs-project-setup-guide","text":"","title":"MkDocs Project Setup Guide"},{"location":"misc/mkdocs/#1-create-new-mkdocs-environment","text":"mkdocs new .","title":"1. Create New MkDocs Environment"},{"location":"misc/mkdocs/#2-configure-mkdocsyml","text":"site_name: Rui Bo Blog site_url: https://mydomain.org/mysite theme: name: readthedocs highlightjs: true hljs_languages: - yaml - rus","title":"2. Configure mkdocs.yml"},{"location":"misc/mkdocs/#3-build-and-serve-documentation","text":"mkdocs serve","title":"3. Build and Serve Documentation"},{"location":"misc/mkdocs/#4-transfer-to-github","text":"git init git status # (1) Stage and (2) Confirm git add . git add -A git add docs/index.md README.md git commit -m \"Initial commit\" # (3) Reference git remote add origin https://github.com/your-username/PhD-Thoughts.git git remote remove origin # (4) Give and (5) Take git push -u origin main git pull origin main","title":"4. Transfer to Github"},{"location":"misc/mkdocs/#5-online","text":"mkdocs gh-deploy","title":"5. Online"},{"location":"misc/photography/","text":"","title":"Photography"}]}